# Generated by Django 3.2.6 on 2021-09-03 12:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usertype', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=False)),
                ('phone_code', models.CharField(blank=True, max_length=2, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True)),
                ('pswd', models.CharField(blank=True, max_length=100, null=True)),
                ('user_code', models.CharField(blank=True, max_length=500, null=True)),
                ('profile_image', models.ImageField(blank=True, default='profile_image.png', null=True, upload_to='Profile-image')),
                ('position', models.CharField(blank=True, max_length=5000, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'CustomUser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Batches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(blank=True, max_length=500, null=True)),
                ('starting_date', models.DateTimeField(blank=True, null=True)),
                ('ending_date', models.DateTimeField(blank=True, null=True)),
                ('batch_slots_remaining', models.IntegerField(blank=True, default=0, null=True)),
                ('joined_batch_slots', models.IntegerField(blank=True, default=0, null=True)),
                ('total_batch_slots', models.IntegerField(blank=True, default=0, null=True)),
                ('available_slots', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(blank=True, choices=[('Removed', 'Removed'), ('Scheduled', 'Scheduled'), ('Completed', 'Completed')], default='Posted', max_length=100, null=True)),
                ('price', models.FloatField(default=0.0)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('category_code', models.CharField(blank=True, max_length=500, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Category_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Category_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Category_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('sub_name', models.CharField(blank=True, max_length=500, null=True)),
                ('course_image', models.ImageField(blank=True, default='course1.jpg', null=True, upload_to='Course-image')),
                ('course_code', models.CharField(blank=True, max_length=500, null=True)),
                ('course_type', models.CharField(blank=True, choices=[('Paid', 'Paid'), ('Free', 'Free')], max_length=100, null=True)),
                ('price', models.FloatField(blank=True, default=0.0, null=True)),
                ('is_offer', models.BooleanField(blank=True, default=False, null=True)),
                ('credit', models.IntegerField(default=0)),
                ('description', models.CharField(blank=True, max_length=5000, null=True)),
                ('total_length_course', models.IntegerField(blank=True, default=0, null=True)),
                ('slots_available', models.IntegerField(blank=True, default=0, null=True)),
                ('slots_remaining', models.IntegerField(blank=True, default=0, null=True)),
                ('joined_slots', models.IntegerField(blank=True, default=0, null=True)),
                ('discount_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('coupon_discount_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('tax_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('total_couponprice_with_tax', models.FloatField(blank=True, default=0.0, null=True)),
                ('preview_video', models.FileField(blank=True, null=True, upload_to='Preview_video')),
                ('status', models.CharField(blank=True, choices=[('Completed', 'Completed'), ('Next video', 'Next video'), ('Removed video', 'Removed video')], default='Posted', max_length=100, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('author_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('batch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.batches')),
                ('category_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.category')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Courses_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Courses_deletedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoursesTopics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('topic_name', models.CharField(blank=True, max_length=5000, null=True)),
                ('about_topic', models.CharField(blank=True, max_length=5000, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('topic_order', models.IntegerField(default=0)),
                ('important_topic', models.BooleanField(default=False)),
                ('special_topic', models.BooleanField(default=False)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.batches')),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoursesTopics_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoursesTopics_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoursesTopics_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Literature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('views', models.IntegerField(blank=True, default=0, null=True)),
                ('likes', models.IntegerField(blank=True, default=0, null=True)),
                ('tags', models.CharField(blank=True, max_length=500, null=True)),
                ('image', models.ImageField(blank=True, default='profile_image.png', null=True, upload_to='Literature-image')),
                ('type_of_literature', models.CharField(blank=True, choices=[('Webinar', 'Webinar'), ('Podcast', 'Podcast'), ('Blog', 'Blog'), ('Article', 'Article')], max_length=100, null=True)),
                ('about', models.CharField(blank=True, max_length=5000, null=True)),
                ('time', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, choices=[('Completed', 'Completed'), ('Next', 'Next'), ('Removed', 'Removed')], max_length=100, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('author_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('batch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.batches')),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Literature_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Literature_deletedby', to=settings.AUTH_USER_MODEL)),
                ('team_members', models.ManyToManyField(related_name='team_members', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Literature_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order_summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Paid', 'Paid'), ('Not Paid', 'Not Paid')], default='Posted', max_length=100, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.batches')),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Order_summary_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Order_summary_deletedby', to=settings.AUTH_USER_MODEL)),
                ('order_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Order_summary_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Webinar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('about', models.CharField(blank=True, max_length=5000, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Completed', 'Completed'), ('Live Now', 'Live Now'), ('Next', 'Next'), ('Removed', 'Removed')], max_length=100, null=True)),
                ('image', models.ImageField(blank=True, default='profile_image.png', null=True, upload_to='webinar-image')),
                ('webinar_link', models.CharField(blank=True, max_length=500, null=True)),
                ('webinar_code', models.CharField(blank=True, max_length=500, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webinar_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webinar_deletedby', to=settings.AUTH_USER_MODEL)),
                ('literature_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.literature')),
                ('team_members', models.ManyToManyField(related_name='webinarteam_members', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webinar_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('task_code', models.CharField(blank=True, max_length=500, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Task_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Task_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Task_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon', models.CharField(blank=True, max_length=500, null=True)),
                ('total_price', models.FloatField(default=0.0)),
                ('coupon_discount_price', models.FloatField(default=0.0)),
                ('tax_amount', models.FloatField(default=0.0)),
                ('total_including_task', models.FloatField(default=0.0)),
                ('paid_amount', models.FloatField(default=0.0)),
                ('balance_amount', models.FloatField(default=0.0)),
                ('paypal_status', models.CharField(blank=True, max_length=500, null=True)),
                ('message_from_paypal', models.CharField(blank=True, max_length=500, null=True)),
                ('payment_id', models.CharField(blank=True, max_length=500, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_details', models.CharField(blank=True, max_length=5000, null=True)),
                ('payment_person', models.CharField(blank=True, max_length=500, null=True)),
                ('payment_error_message', models.CharField(blank=True, max_length=500, null=True)),
                ('payment_success_message', models.CharField(blank=True, max_length=500, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, choices=[('Paid', 'Paid'), ('Not Paid', 'Not Paid')], default='Posted', max_length=100, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('Order_summary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.order_summary')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Payment_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Payment_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Payment_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('module_code', models.CharField(blank=True, max_length=500, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Module_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Module_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Module_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MiniProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('mini_project_code', models.CharField(blank=True, max_length=500, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MiniProject_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MiniProject_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MiniProject_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MajorProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('major_project_code', models.CharField(blank=True, max_length=500, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MajorProject_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MajorProject_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MajorProject_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('query', models.CharField(blank=True, max_length=5000, null=True)),
                ('status', models.CharField(blank=True, choices=[('Posted', 'Posted'), ('Responded', 'Responded')], default='Posted', max_length=100, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Help_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Help_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Help_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('Completed', 'Completed'), ('Live Now', 'Live Now'), ('Next', 'Next'), ('Removed', 'Removed')], max_length=100, null=True)),
                ('tags', models.CharField(blank=True, max_length=500, null=True)),
                ('image', models.ImageField(blank=True, default='profile_image.png', null=True, upload_to='Events-image')),
                ('about', models.CharField(blank=True, max_length=5000, null=True)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('lenghth_to_conduct', models.IntegerField(blank=True, default=0, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Events_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Events_deletedby', to=settings.AUTH_USER_MODEL)),
                ('main_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_person', to=settings.AUTH_USER_MODEL)),
                ('teachers', models.ManyToManyField(related_name='teachers', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Events_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoursesTopicsDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_topic_name', models.CharField(blank=True, max_length=5000, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='topic_video')),
                ('status', models.BooleanField(default=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('details', models.CharField(blank=True, max_length=5000, null=True)),
                ('pdf', models.FileField(blank=True, null=True, upload_to='topic_pdf')),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoursesTopicsDetails_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoursesTopicsDetails_deletedby', to=settings.AUTH_USER_MODEL)),
                ('topic_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.coursestopics')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoursesTopicsDetails_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoursesDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview_video', models.FileField(blank=True, null=True, upload_to='Preview_video')),
                ('status', models.CharField(blank=True, choices=[('Completed', 'Completed'), ('Next video', 'Next video'), ('Removed video', 'Removed video')], default='Posted', max_length=100, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.batches')),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoursesDetails_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoursesDetails_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoursesDetails_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='courses',
            name='major_projects',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.majorproject'),
        ),
        migrations.AddField(
            model_name='courses',
            name='miniprojects',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.miniproject'),
        ),
        migrations.AddField(
            model_name='courses',
            name='modules',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.module'),
        ),
        migrations.AddField(
            model_name='courses',
            name='task_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.task'),
        ),
        migrations.AddField(
            model_name='courses',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Courses_updatedby', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CourseMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('about_user', models.CharField(blank=True, max_length=5000, null=True)),
                ('user_account', models.CharField(blank=True, choices=[('Paid', 'Paid'), ('Not Paid', 'Not Paid')], max_length=100, null=True)),
                ('total_amount', models.FloatField(default=0.0)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CourseMembers_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CourseMembers_deletedby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CourseMembers_updatedby', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.CharField(blank=True, max_length=5000, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('responted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('literature_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.literature')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bootcamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('sub_name', models.CharField(blank=True, max_length=500, null=True)),
                ('image', models.ImageField(blank=True, default='bootcamp.jpg', null=True, upload_to='Bootcamp-image')),
                ('subject', models.CharField(blank=True, max_length=500, null=True)),
                ('bootcamp_code', models.CharField(blank=True, max_length=500, null=True)),
                ('price', models.FloatField(default=0.0)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Next', 'Next'), ('Over', 'Over')], default='Next', max_length=100, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Bootcamp_createdby', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Bootcamp_deletedby', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.task')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Bootcamp_updatedby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='batches',
            name='course_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.courses'),
        ),
        migrations.AddField(
            model_name='batches',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Batches_createdby', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='batches',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Batches_deletedby', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='batches',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Batches_updatedby', to=settings.AUTH_USER_MODEL),
        ),
    ]
